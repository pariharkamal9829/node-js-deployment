# Name of the GitHub Actions workflow
name: CI/CD for Node.js REST API

# Trigger workflow on push to main branch and manual trigger
on:
  push:
    branches: [main]
  workflow_dispatch:

# Permissions needed for this workflow
permissions:
  contents: write

# Define the jobs to be executed
jobs:
  # Build job
  Build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Login to DockerHub using secrets for credentials
      - name: Login to DockerHub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

      # Build Docker image with a custom repository name
      - name: Build Docker Image
        run: docker build -t YOUR_DOCKERHUB_USERNAME/rest-api:latest .

      # Push the built image to DockerHub
      - name: Push to DockerHub
        run: docker push YOUR_DOCKERHUB_USERNAME/rest-api:latest

  # Deploy job
  Deploy:
    runs-on: self-hosted
    steps:
      # Pull the latest Docker image from DockerHub
      - name: Pull the Docker Image
        run: docker pull YOUR_DOCKERHUB_USERNAME/rest-api:latest

      # Stop and remove the old container if it exists
      - name: Delete Old Container
        run: |
          if [ "$(docker ps -q -f name=rest-api-Container)" ]; then
            docker stop rest-api-Container
            docker rm rest-api-Container
          fi

      # Run a new container from the pulled image
      - name: Run the Container
        run: docker run -d -p 80:80 --name rest-api-Container YOUR_DOCKERHUB_USERNAME/rest-api
